{"version":3,"file":"contentScript.abc3f5dd4e7c2ad7c8cd.hot-update.js","mappingssources":["webpack://chrome-extension-boilerplate-react/./src/pages/Content/Sections/filter/FilterSection.tsx","webpack://chrome-extension-boilerplate-react/webpack/runtime/getFullHash"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport React, { useState, useEffect } from 'react';\r\nimport { filterSectionStyle, filterGroupStyle, filterLabelStyle, filterInputStyle, filterButtonContainerStyle, } from '../../styles';\r\nimport Button from '../../button';\r\nimport UnifiedModal from '../../Modals/FinalModal';\r\nconst MULTIPLE_KEYS = {\r\n    MAIN: 'mainMultipleLinks',\r\n    RANGE: 'rangeMultipleLinks',\r\n    ACTION: 'multipleActionLinks',\r\n};\r\nconst PLAYLIST_KEYS = {\r\n    PROCESSED: 'playlistProcessedLinks',\r\n    RANGE: 'playlistRangeLinks',\r\n    ACTION: 'playlistActionLinks',\r\n};\r\nconst FilterSection = ({ onSectionChange, goBack, rememberPrevious }) => {\r\n    const [errors, setErrors] = useState({});\r\n    const [currentErrorKey, setCurrentErrorKey] = useState(null);\r\n    const [availableLinks, setAvailableLinks] = useState([]);\r\n    useEffect(() => {\r\n        if (rememberPrevious === 2) {\r\n            chrome.storage.local.get([MULTIPLE_KEYS.MAIN], result => {\r\n                var _a;\r\n                setAvailableLinks((_a = result[MULTIPLE_KEYS.MAIN]) !== null && _a !== void 0 ? _a : []);\r\n            });\r\n        }\r\n        else if (rememberPrevious === 3) {\r\n            chrome.storage.local.get([PLAYLIST_KEYS.PROCESSED], result => {\r\n                var _a;\r\n                setAvailableLinks((_a = result[PLAYLIST_KEYS.PROCESSED]) !== null && _a !== void 0 ? _a : []);\r\n            });\r\n        }\r\n    }, [rememberPrevious]);\r\n    const validate = () => {\r\n        var _a, _b;\r\n        const newErrors = {};\r\n        const mainMin = Number((_a = document.getElementById('main-min')) === null || _a === void 0 ? void 0 : _a.value) || 0;\r\n        const mainMax = Number((_b = document.getElementById('main-max')) === null || _b === void 0 ? void 0 : _b.value) || 0;\r\n        const ranges = ['subscribe', 'like', 'comment'];\r\n        const minAllowed = availableLinks.length > 0 ? 1 : 0;\r\n        const maxAllowed = availableLinks.length;\r\n        if (mainMin > mainMax) {\r\n            newErrors['main'] = 'Minimum value cannot exceed maximum value.';\r\n        }\r\n        else if (mainMin < minAllowed) {\r\n            newErrors['main'] = `Minimum value cannot be less than ${minAllowed}.`;\r\n        }\r\n        else if (mainMax > maxAllowed) {\r\n            newErrors['main'] = `Maximum value cannot exceed ${maxAllowed}.`;\r\n        }\r\n        ranges.forEach(range => {\r\n            var _a, _b;\r\n            const min = Number((_a = document.getElementById(`${range}-min`)) === null || _a === void 0 ? void 0 : _a.value);\r\n            const max = Number((_b = document.getElementById(`${range}-max`)) === null || _b === void 0 ? void 0 : _b.value);\r\n            if (min > max) {\r\n                newErrors[range] = 'Minimum value cannot exceed maximum value.';\r\n            }\r\n            else if (min < mainMin && min != null) {\r\n                newErrors[range] = 'Minimum must be at least the main range minimum.';\r\n            }\r\n            else if (min > mainMax) {\r\n                newErrors[range] = 'Minimum cannot exceed the main range maximum.';\r\n            }\r\n            else if (max < mainMin && m != null) {\r\n                newErrors[range] = 'Maximum must be at least the main range minimum.';\r\n            }\r\n            else if (max > mainMax) {\r\n                newErrors[range] = 'Maximum cannot exceed the main range maximum.';\r\n            }\r\n        });\r\n        setErrors(newErrors);\r\n        const firstKey = Object.keys(newErrors)[0] || null;\r\n        if (firstKey) {\r\n            setCurrentErrorKey(firstKey);\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    const getInputStyle = (key) => (Object.assign(Object.assign({}, filterInputStyle), { border: errors[key] ? '2px solid red' : undefined }));\r\n    const handleSubmit = () => __awaiter(void 0, void 0, void 0, function* () {\r\n        var _a, _b, _c, _d, _e, _f, _g, _h;\r\n        if (!validate())\r\n            return;\r\n        const mainMin = Number((_a = document.getElementById('main-min')) === null || _a === void 0 ? void 0 : _a.value);\r\n        const mainMax = Number((_b = document.getElementById('main-max')) === null || _b === void 0 ? void 0 : _b.value);\r\n        const subscribeMin = Number((_c = document.getElementById('subscribe-min')) === null || _c === void 0 ? void 0 : _c.value);\r\n        const subscribeMax = Number((_d = document.getElementById('subscribe-max')) === null || _d === void 0 ? void 0 : _d.value);\r\n        const likeMin = Number((_e = document.getElementById('like-min')) === null || _e === void 0 ? void 0 : _e.value);\r\n        const likeMax = Number((_f = document.getElementById('like-max')) === null || _f === void 0 ? void 0 : _f.value);\r\n        const commentMin = Number((_g = document.getElementById('comment-min')) === null || _g === void 0 ? void 0 : _g.value);\r\n        const commentMax = Number((_h = document.getElementById('comment-max')) === null || _h === void 0 ? void 0 : _h.value);\r\n        const adjustedMainMin = mainMin - 1;\r\n        const adjustedMainMax = mainMax;\r\n        const rangeLinks = availableLinks.slice(adjustedMainMin, adjustedMainMax);\r\n        const subscribeLinks = availableLinks.slice(subscribeMin - 1, subscribeMax);\r\n        const likeLinks = availableLinks.slice(likeMin - 1, likeMax);\r\n        const commentLinks = availableLinks.slice(commentMin - 1, commentMax);\r\n        const actionLinks = {\r\n            subscribe: subscribeLinks,\r\n            like: likeLinks,\r\n            comment: commentLinks,\r\n        };\r\n        const storageItems = {};\r\n        if (rememberPrevious === 2) {\r\n            storageItems[MULTIPLE_KEYS.RANGE] = rangeLinks;\r\n            storageItems[MULTIPLE_KEYS.ACTION] = actionLinks;\r\n        }\r\n        else if (rememberPrevious === 3) {\r\n            storageItems[PLAYLIST_KEYS.RANGE] = rangeLinks;\r\n            storageItems[PLAYLIST_KEYS.ACTION] = actionLinks;\r\n        }\r\n        yield chrome.storage.local.set(storageItems);\r\n        goBack();\r\n    });\r\n    return (React.createElement(\"div\", { className: \"filter-section\", style: filterSectionStyle },\r\n        React.createElement(\"div\", { id: \"link-count\" },\r\n            React.createElement(\"p\", null,\r\n                \"Links Count: \",\r\n                availableLinks.length > 0\r\n                    ? `1 to ${availableLinks.length}`\r\n                    : `0 to ${availableLinks.length}`)),\r\n        React.createElement(\"div\", { id: \"main-range\", style: filterGroupStyle },\r\n            React.createElement(\"p\", { style: filterLabelStyle }, \"Main\"),\r\n            React.createElement(\"input\", { type: \"number\", id: \"main-min\", style: getInputStyle('main') }),\r\n            React.createElement(\"input\", { type: \"number\", id: \"main-max\", style: getInputStyle('main') })),\r\n        ['subscribe', 'like', 'comment'].map(range => (React.createElement(\"div\", { key: range, id: `${range}-range`, style: filterGroupStyle },\r\n            React.createElement(\"p\", { style: filterLabelStyle }, range.charAt(0).toUpperCase() + range.slice(1)),\r\n            React.createElement(\"input\", { type: \"number\", id: `${range}-min`, style: getInputStyle(range) }),\r\n            React.createElement(\"input\", { type: \"number\", id: `${range}-max`, style: getInputStyle(range) })))),\r\n        React.createElement(\"div\", { id: \"range-btn\", style: filterButtonContainerStyle },\r\n            React.createElement(Button, { btnId: \"submit-btn\", onClick: handleSubmit, customStyle: { width: '140px', height: '30px', display: 'flex', alignItems: 'center', justifyContent: 'center' } }, \"Submit\"),\r\n            React.createElement(Button, { btnId: \"back-btn\", onClick: goBack, customStyle: { width: '140px', height: '30px', display: 'flex', alignItems: 'center', justifyContent: 'center' } }, \"Back\")),\r\n        currentErrorKey && (React.createElement(UnifiedModal, { mode: \"filter-error\", message: errors[currentErrorKey], onClose: () => setCurrentErrorKey(null) }))));\r\n};\r\nexport default FilterSection;\r\n","__webpack_require__.h = () => (\"4f397ef0f75b3a5104cc\")"],"names":[],"sourceRoot":""}